name: Docker CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    name: Build And Deploy K8S
    environment: Production # 환경 지정
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      K8S_NAMESPACE: chatforyou-io # Kubernetes 네임스페이스
      DEPLOYMENT_NAME: chatforyou-nextjs-app # Deployment 이름

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. Kubeconfig 설정
      - name: Configure Kubeconfig
        run: |
          mkdir -p ${HOME}/.kube
          echo "${KUBE_CONFIG}" | base64 --decode > ${HOME}/.kube/config
          export KUBECONFIG=${HOME}/.kube/config

      # 3. Set environment variables
      - name: Set environment variables
        run: |
          echo "API_DOMAIN=$API_DOMAIN" >> .env
          echo "NEXT_PUBLIC_GOOGLE_CLIENT_ID=$NEXT_PUBLIC_GOOGLE_CLIENT_ID" >> .env
          echo "GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET" >> .env
          echo "NEXT_PUBLIC_GOOGLE_REDIRECT_URI=$NEXT_PUBLIC_GOOGLE_REDIRECT_URI" >> .env
          echo "NEXT_PUBLIC_GOOGLE_STATE=$NEXT_PUBLIC_GOOGLE_STATE" >> .env
          echo "NEXT_PUBLIC_KAKAO_CLIENT_ID=$NEXT_PUBLIC_KAKAO_CLIENT_ID" >> .env
          echo "KAKAO_CLIENT_SECRET=$KAKAO_CLIENT_SECRET" >> .env
          echo "NEXT_PUBLIC_KAKAO_REDIRECT_URI=$NEXT_PUBLIC_KAKAO_REDIRECT_URI" >> .env
          echo "NEXT_PUBLIC_KAKAO_STATE=$NEXT_PUBLIC_KAKAO_STATE" >> .env
          echo "NEXT_PUBLIC_NAVER_CLIENT_ID=$NEXT_PUBLIC_NAVER_CLIENT_ID" >> .env
          echo "NAVER_CLIENT_SECRET=$NAVER_CLIENT_SECRET" >> .env
          echo "NEXT_PUBLIC_NAVER_REDIRECT_URI=$NEXT_PUBLIC_NAVER_REDIRECT_URI" >> .env
          echo "NEXT_PUBLIC_NAVER_STATE=$NEXT_PUBLIC_NAVER_STATE" >> .env
          echo "NEXT_PUBLIC_BASE_PATH=$NEXT_PUBLIC_BASE_PATH" >> .env
          echo "JWT_SECRET=$JWT_SECRET" >> .env
        env:
          API_DOMAIN: ${{ secrets.API_DOMAIN }}
          NEXT_PUBLIC_GOOGLE_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          NEXT_PUBLIC_GOOGLE_REDIRECT_URI: ${{ secrets.NEXT_PUBLIC_GOOGLE_REDIRECT_URI }}
          NEXT_PUBLIC_GOOGLE_STATE: ${{ secrets.NEXT_PUBLIC_GOOGLE_STATE }}
          NEXT_PUBLIC_KAKAO_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_KAKAO_CLIENT_ID }}
          KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}
          NEXT_PUBLIC_KAKAO_REDIRECT_URI: ${{ secrets.NEXT_PUBLIC_KAKAO_REDIRECT_URI }}
          NEXT_PUBLIC_KAKAO_STATE: ${{ secrets.NEXT_PUBLIC_KAKAO_STATE }}
          NEXT_PUBLIC_NAVER_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_NAVER_CLIENT_ID }}
          NAVER_CLIENT_SECRET: ${{ secrets.NAVER_CLIENT_SECRET }}
          NEXT_PUBLIC_NAVER_REDIRECT_URI: ${{ secrets.NEXT_PUBLIC_NAVER_REDIRECT_URI }}
          NEXT_PUBLIC_NAVER_STATE: ${{ secrets.NEXT_PUBLIC_NAVER_STATE }}
          NEXT_PUBLIC_BASE_PATH: ${{ secrets.NEXT_PUBLIC_BASE_PATH }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

      # 4. TIMESTAMP 생성 (한국 시간으로) && IMAGE_URI 로 이미지명:태크명 공통화
      # IMAGE_URI = chatforyou-io/chatforyou-io-frontend:시간
      - name: Generate TIMESTAMP in KST
        id: timestamp
        run: |
          export TZ=Asia/Seoul
          TIMESTAMP=$(date '+%Y%m%d%H%M%S')
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV
          echo "IMAGE_URI=ghcr.io/${{ github.repository_owner }}/chatforyou-io-frontend:$TIMESTAMP" >> $GITHUB_ENV

      # 5. Docker 이미지 빌드 및 태그
      - name: Build Docker Image
        run: |
          docker build --file Dockerfile -t $IMAGE_URI .

      # 6. Docker 이미지 푸시 (GitHub Container Registry)
      - name: Push Docker Image to GitHub Packages
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push $IMAGE_URI

      # 7. Kubernetes 배포
      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/$DEPLOYMENT_NAME \
            nextjs-container=$IMAGE_URI \
            -n $K8S_NAMESPACE
          kubectl rollout status deployment/$DEPLOYMENT_NAME -n $K8S_NAMESPACE